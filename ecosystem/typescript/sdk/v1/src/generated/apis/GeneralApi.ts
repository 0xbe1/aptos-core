// tslint:disable
/**
 * Aptos Node API
 * The Aptos Node API is a RESTful API for client applications to interact with the Aptos blockchain.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';
import type { OperationOpts, HttpQuery } from '../runtime';
import type {
    AccountData,
    IndexResponse,
} from '../models';

export interface GetAccountRequest {
    address: string;
    ledgerVersion?: number;
}

/**
 * no description
 */
export class GeneralApi extends BaseAPI {

    /**
     * Return high level information about an account such as its sequence number.
     * get_account
     */
    getAccount({ address, ledgerVersion }: GetAccountRequest): Observable<AccountData>
    getAccount({ address, ledgerVersion }: GetAccountRequest, opts?: OperationOpts): Observable<AjaxResponse<AccountData>>
    getAccount({ address, ledgerVersion }: GetAccountRequest, opts?: OperationOpts): Observable<AccountData | AjaxResponse<AccountData>> {
        throwIfNullOrUndefined(address, 'address', 'getAccount');

        const query: HttpQuery = {};

        if (ledgerVersion != null) { query['ledger_version'] = ledgerVersion; }

        return this.request<AccountData>({
            url: '/accounts/{address}'.replace('{address}', encodeURI(address)),
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

    /**
     * Get the latest ledger information, including data such as chain ID, role type, ledger versions, epoch, etc.
     * Get ledger info
     */
    getLedgerInfo(): Observable<IndexResponse>
    getLedgerInfo(opts?: OperationOpts): Observable<AjaxResponse<IndexResponse>>
    getLedgerInfo(opts?: OperationOpts): Observable<IndexResponse | AjaxResponse<IndexResponse>> {
        return this.request<IndexResponse>({
            url: '/',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     * Provides a UI that you can use to explore the API. You can also retrieve the API directly at `/openapi.yaml` and `/openapi.json`.
     * Show OpenAPI explorer
     */
    openapi(): Observable<string>
    openapi(opts?: OperationOpts): Observable<AjaxResponse<string>>
    openapi(opts?: OperationOpts): Observable<string | AjaxResponse<string>> {
        return this.request<string>({
            url: '/openapi',
            method: 'GET',
        }, opts?.responseOpts);
    };

}
